@model IEnumerable<FullMetalLibrary.Models.Author>

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>
<form asp-controller="Authors" asp-action="Index" method="get">
    <p>
        Search: <input type="text" name="searchString" value="@ViewData["CurrentFilter"]" />
        <input type="submit" value="Search" class="btn btn-primary" />
    </p>
</form>

<!-- Sorting Buttons -->
<div class="btn-group mb-3">
    <a asp-action="Index" asp-route-sortOrder="az" asp-route-searchString="@ViewData["CurrentFilter"]" class="btn btn-outline-primary">⬆</a>
    <a asp-action="Index" asp-route-sortOrder="za" asp-route-searchString="@ViewData["CurrentFilter"]" class="btn btn-outline-primary">⬇</a>
</div>


@if (ViewBag.NotFoundMessage != null)
{
    <div class="alert alert-warning">@ViewBag.NotFoundMessage</div>
}
@if (ViewBag.AdminMatched != null)
{
    <div class="alert alert-info">
        Your search matched an <strong>Admin</strong>. Showing all books instead.
    </div>
}

<p>
    <a asp-action="Create" class="btn btn-success">Add New Author</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastName)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
